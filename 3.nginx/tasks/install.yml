- name: Download and unpack latest Nginx
  unarchive:
    src: https://nginx.org/download/nginx-{{ nginx_version }}.tar.gz
    dest: "/tmp"
    remote_src: yes
    creates: "/tmp/nginx-{{ nginx_version }}"

- name: configure Nginx installation
  shell: |
    cd /tmp/nginx-{{ nginx_version }}
    ./configure \
      --prefix=/var/www/html \
      --sbin-path=/usr/sbin/nginx \
      --conf-path=/etc/nginx/nginx.conf \
      --http-log-path=/var/log/nginx/access.log \
      --error-log-path=/var/log/nginx/error.log \
      --with-pcre  \
      --lock-path=/var/lock/nginx.lock \
      --pid-path=/var/run/nginx.pid \
      --with-http_ssl_module \
      --with-http_image_filter_module=dynamic \
      --modules-path=/etc/nginx/modules \
      --with-http_v2_module \
      --with-stream=dynamic \
      --with-http_addition_module \
      --with-http_mp4_module

- name: compile Nginx source code
  shell: |
    cd /tmp/nginx-{{ nginx_version }}
    make

- name: install the compiled Nginx source code
  shell: |
    cd /tmp/nginx-{{ nginx_version }}
    make install

# - name: get nginx version
#   shell: "nginx -v"
#   register: nginx_version

# - name: test
#   assert:
#     that: "'nginx version: nginx/{{ nginx_version }}' in nginx_version"
#     fail_msg: "fail_msg"
#     success_msg: "success_msg"
  # any_errors_fatal: true

# - debug: var=nginx_version.stdout_lines

# - hosts: localhost 
#   tasks: 
#   - name: List files in /tmp 
#     command: ls /tmp 
#     register: list_files 

#   - name: Check if file testfile.txt exists 
#     assert: 
#       that: 
#       - "'testfile.txt' in list_files.stdout_lines" 
